# Generated by Django 4.2.7 on 2024-01-23 13:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True, max_length=100, verbose_name="Категория"
                    ),
                ),
                ("slug", models.SlugField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
            },
        ),
        migrations.CreateModel(
            name="Husband",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("age", models.IntegerField(null=True)),
                ("m_count", models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name="TagPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag", models.CharField(db_index=True, max_length=100)),
                ("slug", models.SlugField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="UploadFiles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="uploads_model")),
            ],
        ),
        migrations.CreateModel(
            name="Worker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Заголовок")),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("content", models.TextField(blank=True, verbose_name="Текст статьи")),
                (
                    "time_create",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Время создания"
                    ),
                ),
                (
                    "time_update",
                    models.DateTimeField(auto_now=True, verbose_name="Время изменения"),
                ),
                (
                    "is_published",
                    models.IntegerField(
                        choices=[(0, "Черновик"), (1, "Опубликовано")],
                        default=0,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to="photos/%Y/%m/%d",
                        verbose_name="Фото",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="posts",
                        to="workers.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "husband",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="workers.husband",
                        verbose_name="Муж",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        related_name="workers",
                        to="workers.tagpost",
                        verbose_name="Теги",
                    ),
                ),
            ],
            options={
                "verbose_name": ("Работник",),
                "verbose_name_plural": "Работники",
                "ordering": ["-time_create"],
                "indexes": [
                    models.Index(
                        fields=["-time_create"], name="workers_wor_time_cr_9e82e1_idx"
                    )
                ],
            },
        ),
    ]
